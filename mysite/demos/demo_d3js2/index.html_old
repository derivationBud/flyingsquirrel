<!DOCTYPE html>
<!--  Author: David Roubinet Date  : May 2013 --> 
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />   
    <title>AsnTree</title>   
    <style>     
        .node circle { fill: #fff; stroke: steelblue; stroke-width: 1.5px; }     
        .node { font: 10px sans-serif; }     
        .link { fill: none; stroke: #ccc; stroke-width: 1.5px; }   
    </style>   
</head> 
<body> 
    <!-- <script src="http://d3js.org/d3.v3.js" charset="utf-8"></script> -->
    <script src="demo_d3js2/d3.v3.min.js" charset="utf-8"></script>
    <div id='chart'> </div> 
    <script>
        var w = 1000,h = 2500;    
        var cluster = d3.layout.cluster().size([h, w - 160]);    
        //cluster.children( function(d){ return( d.childNodes ) } ); // Remap json onto xml
        //cluster.value( function(d){ return( d.getAttribute('name') ) } ); // Remap json onto xml

        var diagonal = d3.svg.diagonal().projection(function(d) { return [d.y, d.x]; });    
        var vis = d3.select("#chart").append("svg:svg").attr("width", w).attr("height", h).append("svg:g").attr("transform", "translate(40, 0)");    
       
        d3.json("demo_d3js2/ProtocolDescription.json", function(json) {    
            var nodes = cluster.nodes(json);      
            var link = vis.selectAll("path.link").data(cluster.links(nodes)).enter()
                        .append("svg:path").attr("class", "link").attr("d", diagonal);      
            var node = vis.selectAll("g.node").data(nodes).enter()
                        .append("svg:g").attr("class", "node").attr("transform", function(d) { return "translate(" + d.y + "," + d.x + ")"; })      
            node.append("svg:circle").attr("r", 4.5);      
            node.append("svg:text").attr("dx", function(d) { return d.children ? -8 : 8; }).attr("dy", 3).attr("text-anchor", function(d) { return d.children ? "end" : "start"; }).text(function(d) { return d.name; });  
            }); 
      /*  
        d3.xml("demo_d3js2/mygraph.xml","application/xml",function(doc) {
            json = xmlToJson(doc.documentElement);
            console.log(json)
            var nodes = cluster.nodes(json);      
            var link = vis.selectAll("path.link").data(cluster.links(nodes)).enter()
                        .append("svg:path").attr("class", "link").attr("d", diagonal);      
            var node = vis.selectAll("g.node").data(nodes).enter()
                        .append("svg:g").attr("class", "node").attr("transform", function(d) { return "translate(" + d.y + "," + d.x + ")"; })      
            node.append("svg:circle").attr("r", 4.5);      
            node.append("svg:text")
                .attr("dx", function(d) { return d.children ? -8 : 8; })
                .attr("dy", 3)
                .attr("text-anchor", function(d) { return d.children ? "end" : "start"; })
                .text(function(d) { return d.name; });  
            }); 
            */
    </script> 
</body> 
</html>
